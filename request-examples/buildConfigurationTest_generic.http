### 0. Generate X-TC-CSRF-Token
GET http://192.168.1.5:8111/authenticationTest.html?csrf
Accept: application/json
Authorization: Basic admin admin

> {%
    client.global.set("auth_token", response.body);
    client.global.set("projectId", "projectId_"+$random.alphabetic(10));
    client.global.set("buildTypeId", "buildTypeId_"+$random.alphabetic(10));
%}

### 1. Create project
< {%
    client.log(client.global.get("auth_token"));
%}
POST http://192.168.1.5:8111/app/rest/projects
Content-Type: application/json
Accept: application/json
X-TC-CSRF-Token: {{auth_token}}

{
  "parentProject": {
    "locator": "_Root"
  },
  "name": "{{projectId}}",
  "id": "{{projectId}}",
  "copyAllAssociatedSettings": true
}


### 2. Create build configuration
POST http://192.168.1.5:8111/app/rest/buildTypes
Content-Type: application/json
Accept: application/json
X-TC-CSRF-Token: {{auth_token}}

{
  "id": "{{buildTypeId}}",
  "name": "Print HW",
  "project": {
    "id": "{{projectId}}"
  },
  "steps": {
    "step": [
      {
        "name": "Print HW",
        "type": "simpleRunner",
        "properties": {
          "property": [
            {
              "name": "script.content",
              "value": "echo 'Hello World!'"
            },
            {
              "name": "teamcity.step.mode",
              "value": "default"
            },
            {
              "name": "use.custom.script",
              "value": "true"
            }
          ]
        }
      }
    ]
  }
}

### 3. Add a build to the queue
POST http://192.168.1.5:8111/app/rest/buildQueue
Content-Type: application/json
Accept: application/json
X-TC-CSRF-Token: {{auth_token}}

{
  "buildType": {
    "id": "{{buildTypeId}}"
  }
}

### 4. Get build status
GET http://192.168.1.5:8111/app/rest/builds/id:4
Content-Type: application/json
Accept: application/json
X-TC-CSRF-Token: {{auth_token}}
